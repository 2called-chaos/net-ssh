By default, commands are executed without a pseudo-tty, which means that they have no real concept of a "terminal". They don't have any idea of the size of the window they are running in, and so forth. This means that if you want to execute screen-based programs (like vi, or emacs, or some menuing system), you may run into problems.

The solution is to request that a pseudo-tty (pty) be allocated to the process:

<h:code lang="ruby">
require 'net/ssh'

Net::SSH.start("host.com", "bob") do |ssh|

  ssh.open_channel do |channel|
    channel.request_pty do |ch, success|
      raise "could not request pty!" unless success
      channel.exec "do_something_visual_here"
    end
  end

end
</h:code>

The @#request_pty@ call will callback when it hears from the server. If @success@ is false, then it was unable to allocate a pty for this channel (for whatever reason).

Note that the defaults for the requested pty are as follows:

* terminal type: @xterm@
* size (chars): 80x24
* size (pixels): 640x480

You can specify your own terminal configuration by passing options to @#request_pty@:

<h:code lang="ruby">
require 'net/ssh'

Net::SSH.start("host.com", "bob") do |ssh|

  ssh.open_channel do |channel|
    terminal = { :term => "xterm-256colors",
      :chars_wide => 120,
      :chars_high => 40,
      :pixels_wide => 1024,
      :pixels_high => 700 }

    channel.request_pty(terminal) do |ch, success|
      raise "could not request pty!" unless success
      channel.exec "do_something_visual_here"
    end
  end

end
</h:code>