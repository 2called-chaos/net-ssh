To request a login shell, send a channel request on a new channel:

<h:code lang="ruby">
require 'net/ssh'

Net::SSH.start('host.com', 'bob') do |ssh|
  ssh.open_channel do |channel|
    channel.send_channel_request("shell") do |ch, success|
      raise "could not start shell!" unless success
      # ...
    end
  end

  ssh.loop
end
</h:code>

Note that when a channel is associated with a login shell, you do not use @#exec@ to start programs, because a program is already running: the user's shell. Instead, you start programs just like you would if you were using a terminal--by "typing" the commands into the terminal's standard input. You do this in Net::SSH by calling @Channel#send_data@ to send data over the channel:

<h:code lang="ruby">
require 'net/ssh'

Net::SSH.start('host.com', 'bob') do |ssh|
  ssh.open_channel do |channel|
    channel.send_channel_request("shell") do |ch, success|
      raise "could not start shell!" unless success

      channel.on_data { |ch, data| print data }
      channel.on_extended_data { |ch, type, data| warn data }

      channel.send_data "ls -l\n"
    end
  end

  ssh.loop
end
</h:code>
